{"version":3,"sources":["modules/cpu.js","modules/index.js","store.js","containers/app/CustomAsm.js","containers/app/index.js","index.js"],"names":["initialState","memory","Object","seal","Array","fill","registers","pc","running","painting","width","height","updateItemInArray","array","index","newVal","map","item","i","combineReducers","cpu","Ri","Rj","Rk","state","arguments","length","undefined","action","regs","type","payload","objectSpread","value","Mi","ourPainting","console","log","parseInt","colors","history","History","middleware","thunk","routerMiddleware","composedEnhancers","compose","apply","applyMiddleware","concat","createStore","connectRouter","rootReducer","CustomHighlightRules","_window$ace$acequire$","_this","classCallCheck","this","possibleConstructorReturn","getPrototypeOf","call","$rules","start","token","regex","caseInsensitive","inherits","window","ace","acequire","TextHighlightRules","CustomAsm","_this2","HighlightRules","Mode","solution","App","interpreter","bind","assertThisInitialized","unclean","aceEditor","React","createRef","xInput","yInput","renderGrid","getColor","line","split_line","toLowerCase","split","command","shift","startsWith","step","props","toggle","lines","needToClean","indexOf","substring","trim","e","Number","toUpperCase","refs","editor","gotoLine","execCommand","add","sub","set","move","goto","cond_goto","or","load","write","movePrinter","sleep","ms","Promise","resolve","setTimeout","customMode","getSession","setMode","init","reset","color","element","j","react_default","a","createElement","dangerouslySetInnerHTML","__html","style","backgroundColor","href","className","onClick","disabled","asyncToGenerator","regenerator_default","mark","_callee4","wrap","_context4","prev","next","stop","react_ace_lib_default","ref","mode","theme","onChange","newValue","setState","name","editorProps","$blockScrolling","setOptions","firstLineNumber","maxLines","minLines","overflowY","defaultValue","marginLeft","dist_default","inline","text","fontFamily","marginTop","Component","connect","_ref2","_callee2","dispatch","_context2","_x2","_ref3","_callee3","_context3","_x3","_ref4","_x4","_ref5","_callee5","_context5","_x5","_ref6","_callee6","_context6","_x6","_ref7","_callee7","_context7","_x7","_ref8","_callee8","_context8","_x8","_ref9","_callee9","_context9","_x9","_ref10","_callee10","_context10","_x10","_ref11","_callee11","_context11","_x11","_ref12","_callee12","_context12","_x12","_ref","_callee","_context","_x","_ref13","_callee13","_context13","_x13","target","document","querySelector","render","es","store","lib","app"],"mappings":"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","file":"static/js/main.c2e84f7b.chunk.js","sourcesContent":["export const ADD = 'ADD';\nexport const SUB = 'SUB';\nexport const SET = 'SET';\nexport const MOVE = 'MOVE';\nexport const GOTO = 'GOTO';\nexport const COND_GOTO = 'COND_GOTO';\nexport const OR = 'OR';\nexport const LOAD = 'LOAD';\nexport const WRITE = 'WRITE';\nexport const ERROR = 'ERROR';\nexport const TOGGLE = 'TOGGLE';\nexport const MOVE_PRINTER = 'MOVE_PRINTER';\nexport const PAINT = 'PAINT';\nexport const INIT = 'INIT';\nexport const RESET = 'RESET';\n\nconst initialState = {\n  memory: Object.seal(new Array(106).fill(0)), // [0, 100] users control, 101, 102, 103, 104 reserved, 105 free\n  registers: Object.seal(new Array(3).fill(0)), // R1, R2, R3. General purpose registers\n  //pastStates: [],\n  pc: 0,\n  running: false,\n  painting: new Array(20).fill(0),\n  width: 0,\n  height: 0\n}\n\nfunction updateItemInArray(array, index, newVal) {\n  return array.map((item, i) => {\n    // Replace the item at index 2\n    if(i === index) {\n      return newVal;\n    }\n\n    // Leave every other item unchanged\n    return item;\n  });\n}\n\nexport const init = (height, width, colors) => async dispatch => {\n  dispatch({ type: INIT, payload: {height, width} });\n}\n\nexport const add = (Ri, Rj, Rk) => async dispatch => {\n  dispatch({ type: ADD, payload: {Ri, Rj, Rk} });\n}\n\nexport const sub = (Ri, Rj, Rk) => async dispatch => {\n  dispatch({ type: SUB, payload: {Ri, Rj, Rk} });\n}\n\nexport const set = (Ri, value) => async dispatch => {\n  dispatch({ type: SET, payload: {Ri, value} });\n}\n\nexport const move = (Ri, Rj) => async dispatch => {\n  dispatch({ type: MOVE, payload: {Ri, Rj} });\n}\n\nexport const goto = (Mi) => async dispatch => {\n  dispatch({ type: GOTO, payload: {Mi} });\n}\n\nexport const cond_goto = (Ri, Rj, Mi) => async dispatch => {\n  dispatch({ type: COND_GOTO, payload: {Ri, Rj, Mi} });\n}\n\nexport const or = (Ri, Rj, Rk) => async dispatch => {\n  dispatch({ type: OR, payload: {Ri, Rj, Rk} });\n}\n\nexport const load = (Mi, Ri) => async dispatch => {\n  dispatch({ type: LOAD, payload: {Mi, Ri} });\n}\n\nexport const write = (Ri, Mi) => async dispatch => {\n  dispatch({ type: WRITE, payload: {Ri, Mi} });\n}\n\nexport const toggle = () => async dispatch => {\n  dispatch({ type: TOGGLE });\n}\n\nexport const movePrinter = (index, value) => async dispatch => {\n  await dispatch({ type: PAINT });\n  await dispatch({ type: MOVE_PRINTER, payload: {index, value}});\n}\n\nexport const reset = () => async dispatch => {\n  await dispatch({ type: RESET });\n}\n\n\nexport default (state = initialState, action) => {\n  //let pastStates = state.pastStates;\n  //pastStates.push({memory: state.memory, registers: state.registers, currentMem: state.currentMem});\n  const regs = state.registers;\n  let newVal;\n  let Ri, Rj, Rk;\n  let pc = state.pc + 1; // pointing to next instruction\n\n  switch (action.type) {\n    case ADD:\n    Ri = action.payload.Ri - 1;\n    Rj = action.payload.Rj - 1;\n    Rk = action.payload.Rk - 1;\n    newVal = regs[Ri] + regs[Rj];\n    return {\n      ...state,\n      registers: updateItemInArray(regs, Rk, newVal),\n      //pastStates,\n      pc\n    }\n\n    case SUB:\n    Ri = action.payload.Ri - 1;\n    Rj = action.payload.Rj - 1;\n    Rk = action.payload.Rk - 1;\n    newVal = regs[Ri] - regs[Rj];\n    return {\n      ...state,\n      registers: updateItemInArray(regs, Rk, newVal),\n      //pastStates,\n      pc\n    }\n\n    case SET:\n    Ri = action.payload.Ri - 1;\n    newVal = action.payload.value;\n    return {\n      ...state,\n      registers: updateItemInArray(regs, Ri, newVal),\n      //pastStates,\n      pc\n    }\n\n    case MOVE:\n    Ri = action.payload.Ri - 1;\n    Rj = action.payload.Rj - 1;\n    return {\n      ...state,\n      registers: updateItemInArray(regs, Rj, regs[Ri]),\n      //pastStates,\n      pc\n    }\n\n    case GOTO:\n    pc = action.payload.Mi;\n    return {\n      ...state,\n      //pastStates,\n      pc\n    }\n\n    case COND_GOTO:\n    Ri = action.payload.Ri - 1;\n    Rj = action.payload.Rj - 1;\n\n    if (regs[Ri] > regs[Rj]) {\n      pc = action.payload.Mi;\n    }\n    return {\n      ...state,\n      //pastStates,\n      pc\n    }\n\n    case OR:\n    newVal = regs[action.payload.Ri - 1] | regs[action.payload.Rj - 1];\n    return {\n      ...state,\n      //pastStates,\n      registers: updateItemInArray(regs, action.payload.Rk - 1, newVal),\n      pc\n    }\n\n    case LOAD:\n    return {\n      ...state,\n      //pastStates,\n      registers: updateItemInArray(regs, action.payload.Ri - 1, state.memory[action.payload.Mi]),\n      pc\n    }\n\n    case WRITE:\n    return {\n      ...state,\n      //pastStates,\n      memory: updateItemInArray(state.memory, action.payload.Mi, regs[action.payload.Ri - 1]),\n      pc\n    }\n\n    case TOGGLE:\n    return {\n      ...state,\n      running: !state.running\n    }\n\n    case MOVE_PRINTER:\n    return {\n      ...state,\n      memory: updateItemInArray(state.memory, action.payload.index, action.payload.value)\n    }\n\n    case PAINT:\n    const ourPainting = state.painting;\n    if (state.memory[103]) {\n      console.log(\"Painting: \", state.memory[103], state.memory[102], updateItemInArray(ourPainting, state.memory[102], state.memory[103]))\n    }\n    return {\n      ...state,\n      painting: updateItemInArray(ourPainting, state.memory[102], state.memory[103])\n    }\n\n    case INIT:\n    const height = parseInt(action.payload.height);\n    const width = parseInt(action.payload.width);\n    const painting = new Array(height*width).fill(0);\n    return {\n      ...state,\n      painting: painting,\n      width: width,\n      height: height,\n      colors: action.payload.colors\n    }\n\n    case RESET:\n     return initialState;\n    default:\n    return state\n  }\n}\n\n","import { combineReducers } from 'redux'\nimport cpu from './cpu'\n\nexport default combineReducers({\n  cpu\n})\n","import { createStore, applyMiddleware, compose } from 'redux'\nimport { connectRouter, routerMiddleware } from 'connected-react-router'\nimport thunk from 'redux-thunk'\nimport * as History from 'history'\nimport rootReducer from './modules'\n\nexport const history = History.createBrowserHistory()\n\nconst initialState = {}\nconst enhancers = []\nconst middleware = [thunk, routerMiddleware(history)]\n\nif (process.env.NODE_ENV === 'development') {\n  const devToolsExtension = window.__REDUX_DEVTOOLS_EXTENSION__\n\n  if (typeof devToolsExtension === 'function') {\n    enhancers.push(devToolsExtension())\n  }\n}\n\nconst composedEnhancers = compose(\n  applyMiddleware(...middleware),\n  ...enhancers\n)\n\nexport default createStore(\n  connectRouter(history)(rootReducer),\n  initialState,\n  composedEnhancers\n)\n","import 'brace/mode/assembly_x86';\n\nexport class CustomHighlightRules extends window.ace.acequire(\"ace/mode/text_highlight_rules\").TextHighlightRules {\n  constructor() {\n    super();\n    this.$rules = {\n      \"start\": [{\n        token: \"constant.character.hexadecimal.assembly\",\n        regex: \"\\\\b(?:goto|cond_goto|move|set|add|sub|load|write|or)\",\n        caseInsensitive: true\n      }, {\n        token: \"variable.parameter.register.assembly\",\n        regex: \"\\\\b(?:R1|R2|R3)\",\n        caseInsensitive: true\n      },\n      { token: 'constant.character.decimal.assembly',\n         regex: '\\\\b[0-9]+\\\\b' },\n         { token: 'support.function.directive.assembly',\n           regex: \"\\\\b(?:M[(0-9)]*)\",\n           caseInsensitive: true },\n         { token: 'string.assembly', regex: /'([^\\\\']|\\\\.)*'/ },\n         { token: 'string.assembly', regex: /\"([^\\\\\"]|\\\\.)*\"/ },\n         { token: 'comment.assembly', regex: ';.*$' }]\n    };\n  }\n}\n\nexport default class CustomAsm extends window.ace.acequire('ace/mode/assembly_x86').Mode {\n  constructor() {\n    super();\n    this.HighlightRules = CustomHighlightRules;\n  }\n}","import React from 'react'\nimport { render } from 'react-dom';\nimport brace from 'brace';\nimport AceEditor from 'react-ace';\nimport { connect } from 'react-redux';\nimport 'brace/mode/assembly_x86';\nimport 'brace/theme/monokai';\nimport CustomAsm from \"./CustomAsm.js\";\nimport {\n  add,\n  ADD,\n  sub,\n  SUB,\n  set,\n  SET,\n  move,\n  MOVE,\n  goto,\n  GOTO,\n  cond_goto,\n  COND_GOTO,\n  or,\n  OR,\n  load,\n  LOAD,\n  write,\n  WRITE,\n  toggle,\n  movePrinter,\n  init,\n  reset\n} from '../../modules/cpu';\n\nimport TextTransition, { presets } from \"react-text-transition\";\n\nconst solution = `SET R1 5\nWRITE R1 M101\nLOAD M102 R2\nCOND_GOTO R1 R3 M2\nSET R1 1 //color red\nWRITE R1 M103 //paint red\nLOAD M104 R3 //get current thickness value\nCOND_GOTO R2 R3 M8 //if desired > current, go to last one\nSET R1 0\nWRITE R1 M103\nSET R1 15\nWRITE R1 M101\nLOAD M102 R2\nCOND_GOTO R1 R2 M12\nSET R1 2 //color green\nSET R2 1 //desired thickness value\nWRITE R1 M103 //paint green\nLOAD M104 R3 //get current thickness value\nSET R1 0\nWRITE R1 M103\nSET R1 20\nWRITE R1 M101\n`;\n\nclass App extends React.Component {\n  constructor() {\n    super();\n    this.state = {\n      value: solution || ''\n    };\n    this.interpreter = this.interpreter.bind(this);\n    this.unclean = this.unclean.bind(this);\n    this.aceEditor = React.createRef();\n    this.xInput = React.createRef();\n    this.yInput = React.createRef();\n    this.renderGrid = this.renderGrid.bind(this);\n    this.getColor = this.getColor.bind(this);\n  }\n\n  unclean(line) {\n    const split_line = line.toLowerCase().split(\" \");\n    const command = split_line[0];\n    split_line.shift();\n    switch (command) {\n      case ADD:\n        if (split_line.length != 3) {\n          return \"invalid # of params\";\n        }\n        if (!split_line[0].startsWith(\"r\") || !split_line[1].startsWith(\"r\")|| !split_line[2].startsWith(\"r\")) {\n          return \"invalid params\"\n        }\n      break;\n    }\n  }\n\n  // the main loop / computer\n  async interpreter(step) {\n    await this.props.toggle();\n    const lines = this.state.value.toLowerCase().split(\"\\n\");\n    while (this.props.cpu.running) {\n      for (let i = this.props.cpu.pc; i < lines.length && this.props.cpu.running; i++) {\n        let line = lines[i];\n        const needToClean = line.indexOf(\";\"); // comment\n        if (needToClean > -1) {\n          line = line.substring(0, needToClean);\n        }\n        line = line.trim();\n        const split_line = line.split(\" \");\n        const command = split_line[0];\n        split_line.shift();\n        split_line = split_line.map((e) => {\n          if (e.startsWith(\"r\")) {\n            return Number(e.substring(1, 2));\n          } else if (e.startsWith(\"m\")) {\n            return Number(e.substring(1, e.length));\n          } else {\n            return Number(e);\n          }\n        });\n\n        if (command.toUpperCase() === GOTO) {\n            this.refs.aceEditor.editor.gotoLine(split_line[0]);\n        } else if (command.toUpperCase() === COND_GOTO) {\n            this.refs.aceEditor.editor.gotoLine(this.props.cpu.registers[split_line[0]] > this.props.cpu.registers[split_line[1]] ? split_line[2] : this.props.cpu.pc+2);\n        } else {\n            this.refs.aceEditor.editor.gotoLine(this.props.cpu.pc+1); // 1 for 0 indexed and 1 for next line\n        }\n        this.refs.aceEditor.editor.execCommand(\"gotolineend\");\n\n        switch (command.toUpperCase()) {\n         case ADD:\n          await this.props.add(split_line[0].substring(1, 1), split_line[1].substring(1, 1), split_line[2].substring(1, 1));\n         break;\n         case SUB:\n          await this.props.sub(split_line[0], split_line[1], split_line[2]);\n         break;\n         case SET:\n          await this.props.set(split_line[0], split_line[1]);\n         break;\n         case MOVE:\n          await this.props.move(split_line[0], split_line[1]);\n         break;\n         case GOTO:\n          await this.props.goto(split_line[0]);\n         break;\n         case COND_GOTO:\n         await this.props.cond_goto(split_line[0], split_line[1], split_line[2]);\n         break;\n         case OR:\n         await this.props.or(split_line[0], split_line[1], split_line[2]);\n         break;\n         case LOAD:\n         await this.props.load(split_line[0], split_line[1]);\n         break;     \n         case WRITE:\n         await this.props.write(split_line[0], split_line[1]);\n         break;\n         default:\n          // \n          return;\n         break;\n       }\n        if (step) {\n          await this.props.toggle();\n          return;\n       }\n       if (this.props.cpu.memory[101] < this.props.cpu.memory[102]) {\n        await this.props.movePrinter(102, this.props.cpu.memory[102] - 1);\n       } else if (this.props.cpu.memory[101] > this.props.cpu.memory[102]) {\n        await this.props.movePrinter(102, this.props.cpu.memory[102] + 1);\n       } else { // equal\n        await this.props.movePrinter(102, this.props.cpu.memory[102]);\n       }\n       await this.sleep(800);\n     }\n   }\n }\n\nsleep(ms) {\n  return new Promise(resolve => setTimeout(resolve, ms));\n}\n\nasync componentDidMount() {\n  const customMode = new CustomAsm();\n  this.refs.aceEditor.editor.getSession().setMode(customMode);\n  await this.props.init(this.refs.xInput ? this.refs.xInput.value : 2, this.refs.yInput ? this.refs.yInput.value : 10);\n}\n\nasync componentWillUnmount() {\n  await this.props.reset();\n}\n\ngetColor(index) {\n  const color = this.props.cpu.painting[index];\n  if (color === 0) {\n    return 'white';\n  } else if (color === 1) {\n    return 'red';\n  } else if (color === 2) {\n    return 'green';\n  } else if (color === 3) {\n    return 'blue';\n  } else {\n    return 'white';\n  }\n}\n\nrenderGrid() {\n  if (this.props.cpu.painting.length < 2) {\n    return;\n  }\n  let element = \"<table>\";\n  for (let i = 0; i < this.props.cpu.height; i++) {\n    element += \"<tr>\";\n    for (let j = 0; j < this.props.cpu.width; j++) {\n      //if ((i + 1)*(j + 1) - 1 === this.props.cpu.memory[102]) {\n     //   element += `<td style=\"opacity: .5; background-color: ${this.getColor((i + 1)*(j + 1) - 1)}\"> ${i + 1*j + 1} </td>`;\n      //} else \n      if (i % 2 == 0) {\n        element += `<td style=\"background-color: ${this.getColor((i + 1)*(j + 1) - 1)}\"> ${i + 1*j + 1} </td>`;\n      } else {\n        element += `<td style=\"background-color: ${this.getColor((i + 1)*(j + 1) - 1)}\"> ${this.props.cpu.height * this.props.cpu.width - (i*j)} </td>`;\n      }\n    }\n    element += \"</tr>\"\n  }\n  element += \"</table>\";\n  return <div dangerouslySetInnerHTML={{__html: element}}/>;\n }\n\n\n render() {\n  return (\n    <div>\n    <header style={{width: '100%', backgroundColor: 'black', color: '#fff'}}>\n    CS109 Interpreter - by <a style={{color: 'orange'}} href=\"https://maxleiter.com\">Max Leiter</a> <a style={{color: 'orange'}}  href=\"https://github.com/MaxLeiter/cs109-interpreter\"> (Source) </a>\n    </header>\n    <div className=\"parent\">\n      <div className=\"item first\">\n        <div className=\"controls\">\n              {/*style={{height: this.refs && this.refs.aceEditor ? this.refs.aceEditor.refEditor.clientHeight : 652}*/}\n\n          <button className=\"controls-item\" onClick={() => this.interpreter(false)}> Run </button>\n          <button className=\"controls-item\" onClick={() => this.interpreter(true)}> Step </button>\n          <button className=\"controls-item\" disabled={this.props.cpu.pc === 0} onClick={() => this.interpreter(false)}> {this.props.cpu.running ? \"Stop\" : \"Continue\"} </button>\n          <button className=\"controls-item\" disabled={this.props.cpu.pc === 0} onClick={async () => {const height = this.props.cpu.height; const width = this.props.cpu.width; await this.props.reset(); await this.props.init(height, width)}}> Restart </button>\n\n        </div>\n          <AceEditor\n          ref=\"aceEditor\"\n          mode=\"assembly_x86\"\n          theme=\"monokai\"\n          value={this.state.value}\n          onChange={(newValue) => this.setState({value: newValue})}\n          name=\"aceEditor\"\n          editorProps={{$blockScrolling: true}}\n          setOptions={{firstLineNumber: 0, maxLines: 100, minLines: 40, style: {overflowY: 'scroll'}}}\n          />\n      </div>\n      <div className=\"item last\">\n        <div className=\"item-inner\">\n        Size of image: <input ref=\"xInput\" style={{width: 30}} defaultValue={2} /> x <input ref=\"yInput\" defaultValue={10} style={{width: 30}}/>\n        <button style={{marginLeft: 10}} onClick={() => this.props.init(this.refs.xInput ? this.refs.xInput.value : 2, this.refs.yInput ? this.refs.yInput.value : 10)}> Render & Reset </button>\n        {this.renderGrid()}\n        </div>\n        <pre>\n        PC: M{this.props.cpu.pc} <br />\n        M101: <TextTransition inline={true} text={this.props.cpu.memory[101]} />              R1: <TextTransition inline={true} text={this.props.cpu.registers[0]} />  <br />\n        M102: <TextTransition inline={true} text={this.props.cpu.memory[102]} />              R2: <TextTransition inline={true} text={this.props.cpu.registers[1]} />  <br />\n        M103: <TextTransition inline={true} text={this.props.cpu.memory[103]} />              R3: <TextTransition inline={true} text={this.props.cpu.registers[2]} />  <br />\n        M104: <TextTransition inline={true} text={this.props.cpu.memory[104]} />  <br />\n        M105: <TextTransition inline={true} text={this.props.cpu.memory[105]} />  <br />\n        <br />\n\n        </pre>\n        <label> Memory: </label> <br />\n        <p style={{fontFamily: 'monospace'}}>{this.props.cpu.memory.map((e, i, a) => i === a.length-1 ? `${e}` :  `${e}, `)}</p>\n      </div>\n      <div style={{marginTop: '1em', marginLeft: '1em'}}>\n      Instruction set:<br />\n      <pre>\n      ADD​ Ri Rj Rk <br />\n      SUB​ Ri Rj Rk<br />\n      SET​ Ri value<br />\n      MOVE​ Ri Rj<br />\n      GOTO​ Mi<br />\n      COND_GOTO​ Ri Rj Mi<br />\n      OR​ Ri Rj Rk<br />\n      LOAD​ Mi Ri<br />\n      WRITE​ Ri Mi<br />\n      </pre>\n<br />\n      Registers: <pre>R1, R2, R3</pre><br />\n      <br />\n      Memory: \n      <pre>\n      M0...M100 R/W <br />M100...M104 Read\n      </pre>\n      <br />\n      </div>\n\n      </div>\n    </div>\n    )\n}\n}\n\nconst mapStateToProps = state => {\n  return {\n    cpu: state.cpu,\n  };\n};\n\nexport default connect(\n  mapStateToProps,\n  {add, sub, set, move, goto, cond_goto, or, load, write, toggle, movePrinter, init, reset}\n  )(App);","import React from 'react'\nimport { render } from 'react-dom'\nimport { Provider } from 'react-redux'\nimport { ConnectedRouter } from 'connected-react-router'\nimport store, { history } from './store'\nimport App from './containers/app'\n\nimport 'sanitize.css/sanitize.css'\nimport './index.css'\n\nconst target = document.querySelector('#root')\n\nrender(\n  <Provider store={store}>\n    <ConnectedRouter history={history}>\n      <div>\n        <App />\n      </div>\n    </ConnectedRouter>\n  </Provider>,\n  target\n)\n"],"sourceRoot":""}